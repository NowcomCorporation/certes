version: 1.0.7.{build}
build:
  verbosity: minimal
  project: Certes.sln

skip_tags: true
image: Visual Studio 2017

skip_commits:
  files:
  - '*.md'

environment:
  codecov_upload_token:
    secure: DxYtxftZ1rpZhZzixRqY3hHFrlEZlh62XPV4tcO+zxdsRNZWPSEl967VpRevAPSo

branches:
  # whitelist
  only:
    - master
    - dev
    - bld

init:
  - git config --global core.autocrlf input
  - ps: $verParts = $($env:appveyor_build_version) -Split '\.'
  - ps: $env:CERTES_ASSEMBLY_VERSION = $verParts[0] + '.' + $verParts[1] + '.' + $verParts[2]
  - ps: $env:CERTES_ASSEMBLY_FILE_VERSION = $env:CERTES_ASSEMBLY_VERSION + '.' + $verParts[3]
  - ps: $env:CERTES_ASSEMBLY_INFO_VERSION = if ($env:APPVEYOR_REPO_BRANCH -eq "master") { $env:CERTES_ASSEMBLY_VERSION } else { $env:CERTES_ASSEMBLY_VERSION + '-' + $env:APPVEYOR_REPO_BRANCH + '.' + $verParts[3] }
  - ps: $env:CERTES_PACKAGE_VERSION = $env:CERTES_ASSEMBLY_INFO_VERSION

assembly_info:
  patch: true
  file: '**\AssemblyInfo.*'
  assembly_version: '$(CERTES_ASSEMBLY_VERSION)'
  assembly_file_version: '$(CERTES_ASSEMBLY_FILE_VERSION)'
  assembly_informational_version: '$(CERTES_ASSEMBLY_INFO_VERSION)'

install:

before_build:
  - cmd: nuget restore Certes.sln

build_script:
  - msbuild -t:src\Certes
  - msbuild -t:src\Certes:pack -p:PackageVersion="%CERTES_PACKAGE_VERSION%"
  - msbuild -t:src\Certes_Cli
  - msbuild -t:src\Certes_Cli:Publish
  - ps: '"dotnet %~dp0bin/Certes.Cli.dll %* " | Set-Content .\src\Certes.Cli\bin\$($env:CONFIGURATION)\netcoreapp1.0\publish\certes.bat'
  - 7z a build\certes-cli.zip .\src\Certes.Cli\bin\%CONFIGURATION%\netcoreapp1.0\publish\*.* -r

#test: off
before_test:
  - msbuild -t:rebuild -p:DebugType=full;DebugSymbols=True

test_script:
  - ps: $openCover = "$($env:USERPROFILE)/.nuget/packages/opencover/4.6.519/tools/OpenCover.Console.exe"
  - ps: >-
      & $openCover "-register:user" "-target:dotnet.exe" "-targetargs:test ./test/Certes.Tests/Certes.Tests.csproj -- -noshadow -appveyor" "-oldstyle" "-output:./build/coverage.xml" "-filter:+[Certes]* +[Certes.Cli]*" "-hideskipped:All"

after_test:
  - ps: New-Item build -Type directory -Force | Out-Null
  - "SET PATH=C:\\Python34;C:\\Python34\\Scripts;%PATH%"
  - pip install codecov
  - codecov -f "./build/coverage.xml" -t %codecov_upload_token%

configuration: Release

artifacts:
    - path: src/Certes/bin/$(CONFIGURATION)/Certes.$(CERTES_PACKAGE_VERSION).nupkg
      name: nupkg
      
    - path: build\certes-cli.zip
      name: cli

deploy:
  - provider: GitHub
    release: v$(CERTES_PACKAGE_VERSION)
    description: 'Certes v$(CERTES_PACKAGE_VERSION)'
    auth_token:
      secure: B+lTI7i/tnZeg1ZSmho3HvOWjs0C4hptNy5cvWgF0Nn7b6v8nwT/mxEWVCfIJ7Fy
    artifact: nupkg,cli
    draft: false
    prerelease: false
    on:
      branch: master

  - provider: GitHub
    release: v$(CERTES_PACKAGE_VERSION)
    description: 'Certes v$(CERTES_PACKAGE_VERSION)'
    auth_token:
      secure: B+lTI7i/tnZeg1ZSmho3HvOWjs0C4hptNy5cvWgF0Nn7b6v8nwT/mxEWVCfIJ7Fy
    artifact: nupkg,cli
    draft: true
    prerelease: true
    on:
      branch:
        - dev
        - bld

  - provider: NuGet
    #server: http://www.nuget.org/api/v2/package                  # remove to push to NuGet.org
    api_key:
      secure: enjdo7AiXKaGhj8NC2k3wjQ9mGlU1jxABzG6tuphpM7dNaazlrSlvwR2H1kC4kr+
    skip_symbols: true
    symbol_server:           # remove to push symbols to SymbolSource.org
    artifact: nupkg
    on:
      branch: master

  - provider: NuGet
    server: https://www.myget.org/F/dymetis/api/v2/package
    api_key:
      secure: RSdqUIwRSn8DI5xaa4iWBzOtYU6y3K9JRh07myQpAIRf5IhlwsZpFsnQOpCg1g7J
    skip_symbols: true
    symbol_server:           # remove to push symbols to SymbolSource.org
    artifact: nupkg
    on:
      branch:
        - dev
        - bld
